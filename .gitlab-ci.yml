stages:
- build
variables:
  VERSION: 0.7.0-rc3
  POST_MESSAGE: "Pipeline Trigger: ${CI_PIPELINE_SOURCE}\n
  Branch: ${CI_COMMIT_REF_NAME}\n
  Commit: ${CI_COMMIT_SHA}\n
  Author:  ${GITLAB_USER_NAME} <${GITLAB_USER_EMAIL}>\n
  ${CI_COMMIT_MESSAGE}"

build:linux:
  image: asherd/verus-builders:nheqminer
  variables:
    DOCKER_DRIVER: overlay2
  stage: build
  before_script:
  script:
  - mkdir build && cd build
  - cmake -DUSE_CUDA_DJEZO=0 -DUSE_CPU_XENONCAT=0 ..
  - make -j$(nproc)
  - mkdir -p build/nheqminer
  - cp ../doc/Linux/Readme.txt build/nheqminer
  - cp nheqminer build/nheqminer
  - cd build
  - chmod +x nheqminer/nheqminer
  - tar -czf nheqminer-Linux-v${VERSION}.tar.gz nheqminer
  - curl -F file=@nheqminer-Linux-v${VERSION}.tar.gz
      -F channels="$CPU_POOL_POST_CHANNEL"
      -F initial_comment="${POST_MESSAGE}"
      -H "${SLACK_BOT_AUTH}"
      "https://slack.com/api/files.upload"
  artifacts:
    paths: ["build/build/nheqminer"]
    expire_in: 1 week


build:macos:
  tags: ["High Sierra"]
  variables:
    CXX: g++-8
    CC: gcc-8
  stage: build
  script:
  - mkdir build && cd build
  - cmake -DUSE_CUDA_DJEZO=0 -DUSE_CPU_XENONCAT=0 ..
  - make -j$(sysctl -n hw.physicalcpu)
  - mkdir -p build/nheqminer
  - cp ../doc/Mac/Readme.txt build/nheqminer
  - cp nheqminer build/nheqminer
  - cd build
  - DYLIBS=`otool -L nheqminer/nheqminer | grep "/usr/local" | awk -F' ' '{ print $1 }'`
  - for dylib in $DYLIBS; do cp -rf $dylib Nheqminer/; done
  - for dylib in $DYLIBS; do install_name_tool -change $dylib @executable_path/`basename $dylib` nheqminer/nheqminer; done;
  - chmod +x nheqminer/nheqminer
  - tar -czf nheqminer-MacOS-v${VERSION}.tar.gz nheqminer
  - curl -F file=@nheqminer-MacOS-v${VERSION}.tar.gz
      -F channels="$CPU_POOL_POST_CHANNEL"
      -F initial_comment="${POST_MESSAGE}"
      -H "${SLACK_BOT_AUTH}"
      "https://slack.com/api/files.upload"
  artifacts:
    paths: ["build/build/nheqminer"]
    expire_in: 1 week
